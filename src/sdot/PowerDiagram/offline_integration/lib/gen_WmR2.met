def rot90( P )
    return [ - P[ 1 ], P[ 0 ] ]

def part_int( coeffs, u0, u1, with_os = true )
    P0   := Vec[ Op, 2 ]( [ symbol( "P0.x" ), symbol( "P0.y" ) ] ) 
    P1   := Vec[ Op, 2 ]( [ symbol( "P1.x" ), symbol( "P1.y" ) ] ) 
    N    := rot90( P0 - P1 )
    u    := symbol( "u" )
    Pi   := ( 1 - u ) * P0 + u * P1
    r2   := dot( Pi, Pi )

    val := Op()
    for i in 0 .. coeffs.size
        val += coeffs[ i ] * dot( Pi, Pi ) ^ i
    val *= dot( Pi, N )

    res := polynomial_integration( val, u, u0, u1, deg_poly_max = 20 )

    cw := CodeWriter( "TF" )
    cw.add( "result", res, init )
    print cw.to_string( 4 )

w := symbol( "w" )
part_int( [ w / 2, - 1 / 4 ], 0, 1 )
